# PHP Redmine API

A simple Object Oriented wrapper for Redmine API, written with PHP5.

Uses [Redmine API](http://www.redmine.org/projects/redmine/wiki/Rest_api/).

## Features

* Follows PSR-0 conventions and coding standard: autoload friendly
* API entry points implementation state :
* OK Attachments
* OK Groups
* OK Custom Fields
* OK Issues
* OK Issue Categories
* OK Issue Priorities
* *NOK Issue Relations - only partially implemented*
* OK Issue Statuses
* OK News
* OK Projects
* OK Project Memberships
* OK Queries
* OK Roles
* OK Time Entries
* OK Time Entry Activities
* OK Trackers
* OK Users
* OK Versions
* OK Wiki

## Todo

* Check header's response code (especially for POST/PUT/DELETE requests)
* See http://stackoverflow.com/questions/9183178/php-curl-retrieving-response-headers-and-body-in-a-single-request/9183272#9183272

## Limitations

Redmine is missing some APIs for a full remote management of the data :
* List of activities & roles : http://www.redmine.org/issues/11464
* ...

A possible solution to this would be to create an extra APIs implementing the missing entry points. See existing effort in doing so : https://github.com/rschobbert/redmine-miss-api

## Requirements

* PHP >= 5.4
* The PHP [cURL](http://php.net/manual/en/book.curl.php) extension
* The PHP [SimpleXML](http://php.net/manual/en/book.simplexml.php) extension
* The PHP [JSON](http://php.net/manual/en/book.json.php) extension
* [PHPUnit](https://phpunit.de/) >= 4.0 (optional) to run the test suite
* "Enable REST web service" for your Redmine project (/settings/edit?tab=authentication)
* then obtain your *API access key* in your profile page : /my/account
* or use your *username & password*

## Install

### Composer

[Composer](http://getcomposer.org/download/) users can simply run:

```bash
$ php composer.phar require kbsali/redmine-api:~1.0
```

at the root of their projects. To utilize the library, include
Composer's `vendor/autoload.php` in the scripts that will use the
`Redmine` classes.

For example,

```php
<?php
// This file is generated by Composer
require_once 'vendor/autoload.php';
$client = new Redmine\Client('http://redmine.example.com', 'username', 'password');
```

If you want to use the provided `GuzzleClient` you need to install [Guzzle](http://guzzlephp.org/):

```bash
$ php composer.phar require guzzlehttp/guzzle
```

and use the `GuzzleClient` like so:

```php
<?php
$client = new Redmine\GuzzleClient('http://redmine.example.com', 'username', 'password');
```

### Manual

It is also possible to install the library oneself, either locally to
a project or globally; say, in `/usr/share/php`.

First, download and extract the library somewhere. For example, the
following steps extract v1.5.1 of the library into the
`vendor/php-redmine-api-1.5.1` directory:

```bash
$ mkdir vendor
$ wget -q https://github.com/kbsali/php-redmine-api/archive/v1.5.1.tar.gz
$ tar -xf v1.5.1.tar.gz -C vendor/
$ rm v1.5.1.tar.gz
```

Now, in any scripts that will use the `Redmine` classes, include the
`lib/autoload.php` file from the php-redmine-api directory. For
example,

```php
<?php
// This file ships with php-redmine-api
require 'vendor/php-redmine-api-1.5.1/lib/autoload.php';
$client = new Redmine\Client('http://redmine.example.com', 'username', 'password');
```

### Running the test suite

If you have [PHPUnit](https://phpunit.de/) >= 4.0 installed, you can
run the test suite to make sure that the library will function
properly on your system. Simply run `phpunit` in the php-redmine-api
directory. For example,

```
$ phpunit
PHPUnit 4.3.1 by Sebastian Bergmann.

Configuration read from ./phpunit.xml.dist

...............................................................  63 / 276 ( 22%)
............................................................... 126 / 276 ( 45%)
............................................................... 189 / 276 ( 68%)
............................................................... 252 / 276 ( 91%)
........................

Time: 591 ms, Memory: 10.50Mb
```

## Basic usage of `php-redmine-api` client

```php
<?php

// For Composer users (this file is generated by Composer)
require_once 'vendor/autoload.php';

// Or if you've installed the library manually, use this instead.
// require 'vendor/php-redmine-api-x.y.z/lib/autoload.php';

$client = new Redmine\Client('http://redmine.example.com', 'API_ACCESS_KEY');
//-- OR --
$client = new Redmine\Client('http://redmine.example.com', 'username', 'password');

$client->api('user')->all();
$client->api('user')->listing();

$client->api('issue')->create([
    'project_id'  => 'test',
    'subject'     => 'some subject',
    'description' => 'a long description blablabla',
    'assigned_to' => 'user1',
]);
$client->api('issue')->all([
    'limit' => 1000
]);
```

See `example.php` for further examples.

## User Impersonation

As of Redmine V2.2 you can impersonate user through the REST API :

```php

$client = new Redmine\Client('http://redmine.example.com', 'API_ACCESS_KEY');

// impersonate user
$client->setImpersonateUser('jsmith');

// create a time entry for jsmith
$client->api('time_entry')->create($data);

// remove impersonation for further calls
$client->setImpersonateUser(null);
```


### Thanks!

* Thanks to [Thomas Spycher](https://github.com/tspycher/) for the 1st version of the class.
* Thanks to [Thibault Duplessis aka. ornicar](https://github.com/ornicar) for the php-github-api library, great source of inspiration!
* And all the [contributors](https://github.com/kbsali/php-redmine-api/graphs/contributors)
* specially [JanMalte](https://github.com/JanMalte) for his impressive contribution to the test coverage! :)
