# PHP Redmine API

A simple Object Oriented wrapper for Redmine API, written with PHP5.

Uses [Redmine API](http://www.redmine.org/projects/redmine/wiki/Rest_api/).

## Features

* Follows PSR-0 conventions and coding standard: autoload friendly
* API entry points implementation state :
 * OK Attachments
 * *NOK Groups - only partially implemented*
 * OK Issues
 * OK Issue Categories
 * OK Issue Priorities
 * *NOK Issue Relations - only partially implemented*
 * OK Issue Statuses
 * OK News
 * OK Projects
 * *NOK Project Memberships - only partially implemented*
 * OK Queries
 * OK Roles
 * OK Time Entries
 * OK Time Entry Activities
 * OK Trackers
 * OK Users
 * OK Versions
 * *NOK Wiki - only partially implemented*

## Todo

* API entry points :
 * Finish implementing *Groups*
 * Finish implementing *Issue Relations*
 * Finish implementing *Project Memberships*
* Check header's response code (especially for POST/PUT/DELETE requests)
 * See http://stackoverflow.com/questions/9183178/php-curl-retrieving-response-headers-and-body-in-a-single-request/9183272#9183272
* Maybe use Buzz or Guzzle for handling http connections
 * https://github.com/kriswallsmith/Buzz
 * https://github.com/guzzle/guzzle

## Limitations

Redmine is missing some APIs for a full remote management of the data :
* List of activities : http://www.redmine.org/issues/11464
* ...

A possible solution to this would be to create an extra APIs implementing the missing entry points. See existing effort in doing so : https://github.com/rschobbert/redmine-miss-api

## Requirements

* PHP >= 5.3.2 with [cURL](http://php.net/manual/en/book.curl.php) extension,

## Autoload

The first step to use `php-redmine-api` is to download composer:

```bash
$ curl -s http://getcomposer.org/installer | php
```

Then create a composer.json file in the root of your project:

```yaml
{
    "require": {
        "kbsali/redmine-api": "dev-master"
    }
}
```

... and install your dependencies using:
```bash
$ php composer.phar install
```

## Basic usage of `php-redmine-api` client

```php
<?php

// This file is generated by Composer
require_once 'vendor/autoload.php';

$client = new Redmine\Client('http://redmine.example.com', '1234567890abcdfgh');

$client->api('user')->all();
$client->api('user')->listing();

$client->api('issue')->create(array(
    'project_id'  => 'test',
    'subject'     => 'some subject',
    'description' => 'a long description blablabla',
    'assigned_to' => 'user1',
));
```

see `example.php`

### Thanks!

- Thanks to [Thomas Spycher](http://tspycher.com/2011/03/using-the-redmine-api-with-php/) for the 1st version of the class.
- Thanks to [Thibault Duplessis aka. ornicar](https://github.com/ornicar) for the php-github-api library, great source of inspiration!

## Contributors

- Kevin Saliou 		(@kbsali)
- William Suffill 	(@wsuff)
- @marloscarmo